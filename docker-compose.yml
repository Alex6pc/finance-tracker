services:
  postgres:
    image: postgres:14
    container_name: postgres-bank
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bank_transactions
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - finance-tracker-network
    restart: unless-stopped

  frontend:
    image: node:20-alpine
    volumes:
      - ./frontend:/app
    working_dir: /app
    container_name: finance-tracker-frontend
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - "3000:3000"
      - "24678:24678"
    environment:
      - NUXT_HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - finance-tracker-network
    restart: unless-stopped
    
  backend:
    image: node:20-alpine
    working_dir: /app
    ports:
      - "3001:3001"
    command: sh -c "npm install && npm run start:dev"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: bank_transactions
      NODE_ENV: development
      PORT: 3001
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
    networks:
      - finance-tracker-network
    restart: unless-stopped

    
  adminer:
    image: adminer
    container_name: adminer-finance-tracker
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - finance-tracker-network
    restart: unless-stopped

networks:
  finance-tracker-network:
    name: finance-tracker-network

volumes:
  postgres_data: 